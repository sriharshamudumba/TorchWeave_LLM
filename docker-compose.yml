services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: torchweave_server
    working_dir: /app
    command: >
      uvicorn server:app
        --host 0.0.0.0
        --port 8000
        --app-dir /app/server/src
    environment:
      - PYTHONPATH=/app:/app/server/src
    volumes:
      - ./server/src:/app/server/src:rw
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 12

  model-manager:
    build:
      context: ./model-manager
      dockerfile: Dockerfile
    container_name: torchweave_model_manager
    working_dir: /app/model-manager/src
    command: >
      python -m uvicorn model_manager:app
        --host 0.0.0.0
        --port 8001
    environment:
      - PYTHONPATH=/app:/app/model-manager/src
      - TOKENIZERS_PARALLELISM=false
    volumes:
      - ./model-manager/src:/app/model-manager/src:rw
    ports:
      - "8001:8001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 12

  nginx:
    image: nginx:alpine
    container_name: torchweave_nginx
    depends_on:
      - server
      - model-manager
    ports:
      - "3000:80"   # open http://localhost:3000
    volumes:
      - ./ui/index.html:/usr/share/nginx/html/index.html:ro
      - ./ui/nginx.conf:/etc/nginx/conf.d/site.conf:ro
    command: >
      sh -lc "rm -f /etc/nginx/conf.d/default.conf &&
              nginx -g 'daemon off;'"
    restart: unless-stopped

  optimizer:
    build:
      context: ./optimizer
      dockerfile: Dockerfile
    container_name: torchweave_optimizer
    working_dir: /app
    command: >
      python -u /app/optimizer/src/optimizer.py
    environment:
      - HF_MODEL=${HF_MODEL:-TinyLlama/TinyLlama-1.1B-Chat-v1.0}
      - ARTIFACT_DIR=/artifacts
      - ARTIFACT_MODEL_DIR=/artifacts/model
    volumes:
      - artifacts:/artifacts
    restart: unless-stopped

volumes:
  artifacts:
